--- a/device.c
+++ b/device.c
@@ -1602,7 +1602,8 @@ void cDevice::Action(void)
                        }
                     }
                  // Distribute the packet to all attached receivers:
-                 Lock();
+                 {
+                 cMutexLock MutexLock(&mutexReceiver);
                  for (int i = 0; i < MAXRECEIVERS; i++) {
                      if (receiver[i] && receiver[i]->WantsPid(Pid)) {
                         if (DetachReceivers && cs && (!cs->IsActivating() || receiver[i]->Priority() >= LIVEPRIORITY)) {
@@ -1616,7 +1617,7 @@ void cDevice::Action(void)
                            ChannelCamRelations.SetDecrypt(receiver[i]->ChannelID(), CamSlotNumber);
                         }
                      }
-                 Unlock();
+                   }
                  }
               }
            else
@@ -1655,6 +1656,8 @@ bool cDevice::AttachReceiver(cReceiver *
      return false;
      }
 #endif
+  bool breakout = false;
+  {
   cMutexLock MutexLock(&mutexReceiver);
   for (int i = 0; i < MAXRECEIVERS; i++) {
       if (!receiver[i]) {
@@ -1670,16 +1673,23 @@ bool cDevice::AttachReceiver(cReceiver *
          Receiver->device = this;
          receiver[i] = Receiver;
          Unlock();
-         if (camSlot && Receiver->priority > MINPRIORITY) { // priority check to avoid an infinite loop with the CAM slot's caPidReceiver
-            camSlot->StartDecrypting();
-            startScrambleDetection = time(NULL);
-            }
-         Start();
-         return true;
+         breakout = true;
+         break; // leave mutexReceiver-block asap
          }
       }
-  esyslog("ERROR: no free receiver slot!");
-  return false;
+  }
+  if (breakout) {
+      if (camSlot && Receiver->priority > MINPRIORITY) { // priority check to avoid an infinite loop with the CAM slot's caPidReceiver
+	    camSlot->StartDecrypting();
+            startScrambleDetection = time(NULL);
+	    }
+      Start(); // has to be outside of mutexReceiver-block
+      return true;
+      }
+  else {
+      esyslog("ERROR: no free receiver slot!");
+      return false;
+      }
 }
 
 void cDevice::Detach(cReceiver *Receiver)
@@ -1687,6 +1697,7 @@ void cDevice::Detach(cReceiver *Receiver
   if (!Receiver || Receiver->device != this)
      return;
   bool receiversLeft = false;
+  {
   cMutexLock MutexLock(&mutexReceiver);
   for (int i = 0; i < MAXRECEIVERS; i++) {
       if (receiver[i] == Receiver) {
@@ -1701,6 +1712,7 @@ void cDevice::Detach(cReceiver *Receiver
       else if (receiver[i])
          receiversLeft = true;
       }
+    } // leave mutexReceiver-block asap
   if (camSlot) {
      if (Receiver->priority > MINPRIORITY) { // priority check to avoid an infinite loop with the CAM slot's caPidReceiver
         camSlot->StartDecrypting();
@@ -1709,7 +1721,7 @@ void cDevice::Detach(cReceiver *Receiver
         }
      }
   if (!receiversLeft)
-     Cancel(-1);
+     Cancel(-1); // has to be outside of mutexReceiver-block
 }
 
 void cDevice::DetachAll(int Pid)
